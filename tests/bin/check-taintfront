#!/usr/bin/env bash

# set -e
# set -o pipefail
set -x

top="$(git rev-parse --show-toplevel)"
outdir="$top/ctadl-test-output"
testdir="$top/tests/taint-front"
cd $outdir

any_failed=0

# Finds .tnt testcases and runs them.
# If there is a corresponding .json file, we test the ctadlir against it
# If there is a .codeflows file, we check for code flows
# If there is a .nocodeflows file, we check for absence of code flows
for f in $(ls -1 "$testdir"/*.tnt); do
  testname="$(basename $f .tnt)"
  echo "TAINT-FRONT TEST:" "$testname"
  sarif_file="$outdir/$testname.sarif"
  testcase_dir="$outdir/$testname"
  options_file="$testdir/$(basename $f .tnt).options"
  ir_file="$testdir/$(basename $f .tnt).json"
  flows_file="$testdir/$(basename $f .tnt).codeflows"
  noflows_file="$testdir/$(basename $f .tnt).nocodeflows"
  mkdir -p "$testcase_dir"
  ctadl import taint-front "$f" -o "$testcase_dir" -f
  option_string=""
  if [ -f "$options_file" ]; then
    option_string=$(<"$options_file")
    option_string=$(echo "$option_string" | tr -d '\n')
  fi
  ctadl --dir "$testcase_dir" index $option_string -f
  if [ $? -ne 0 ]; then
    echo "index failure"
    any_failed=1
    continue
  fi
  ctadl --dir "$testcase_dir" query --format sarif -o "$sarif_file"
  if [ $? -ne 0 ]; then
    echo "$testname: query failure"
    any_failed=1
    continue
  fi
  if [ -f "$ir_file" ]; then
    ( cd "$testcase_dir" && python3 "$top/tests/test_ctadlir.py" "$ir_file" )
    if [ $? -ne 0 ]; then
      echo "$testname: test_ctadlir failure"
      any_failed=1
      continue
    fi
  fi
  if [ -f "$flows_file" ]; then
    ( cd "$testcase_dir" && python3 "$top/tests/bin/sarif_has_code_flows.py" "$sarif_file" )
    if [ $? -ne 0 ]; then
      echo "$testname: sarif_has_code_flows failure"
      any_failed=1
      continue
    fi
  fi
  if [ -f "$noflows_file" ]; then
    ( cd "$testcase_dir" && ! python3 "$top/tests/bin/sarif_has_code_flows.py" "$sarif_file" )
    if [ $? -ne 0 ]; then
      echo "$testname: ! sarif_has_code_flows failure"
      any_failed=1
      continue
    fi
  fi
done

if [ $any_failed -ne 0 ]; then
  echo "taint-front test failure, see errors above"
fi
exit $any_failed

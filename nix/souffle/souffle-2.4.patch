diff --git a/CMakeLists.txt b/CMakeLists.txt
index 97502f2f0..b0d115c2d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -106,13 +106,6 @@ option(SOUFFLE_CUSTOM_GETOPTLONG "Enable/Disable custom getopt_long implementati
 cmake_dependent_option(SOUFFLE_USE_LIBCPP "Link to libc++ instead of libstdc++" ON
     "CMAKE_CXX_COMPILER_ID STREQUAL Clang" OFF)
 
-# Using Clang? Likely want to use `lld` too.
-if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
-    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=lld")
-    set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -fuse-ld=lld")
-    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -fuse-ld=lld")
-endif()
-
 # Add aditional modules to CMake
 set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake" ${CMAKE_MODULE_PATH})
 
diff --git a/src/MainDriver.cpp b/src/MainDriver.cpp
index bb8a1e51b..24bc10f92 100644
--- a/src/MainDriver.cpp
+++ b/src/MainDriver.cpp
@@ -213,9 +213,9 @@ void compileToBinary(
     argv.push_back(binary.string());
 
 #if defined(_MSC_VER)
-    const char* interpreter = "python";
+    const char* interpreter = "bash";
 #else
-    const char* interpreter = "python3";
+    const char* interpreter = "bash";
 #endif
     auto exit = execute(interpreter, argv);
     if (!exit) throw std::invalid_argument(tfm::format("unable to execute tool <python3 %s>", command));
